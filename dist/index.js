!function(e){var t={};function s(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(n,r,function(t){return e[t]}.bind(null,r));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=1)}([function(e,t,s){},function(e,t,s){"use strict";s.r(t);s(0);var n=class{constructor(){try{this.findDOMElements(),this.subscribe()}catch(e){console.log("An error occurred. Error description: "+e.message)}}findDOMElements(){this.$header=document.querySelector(".header"),this.$expandButton=this.$header.querySelector(".header__elem--expand-button")}subscribe(){if(!this.$header)throw new Error('The "header" element is undefined');window.addEventListener("scroll",this.pageScrollHandler.bind(this)),this.$expandButton.addEventListener("click",()=>{this.$header.classList.toggle("header--collapsed")})}pageScrollHandler(e){window.scrollY>=this.$header.clientHeight?this.$header.classList.contains("header--with-background")||this.$header.classList.add("header--with-background"):this.$header.classList.remove("header--with-background")}};var r=class{constructor(){try{this.findDOMElements(),this.initializeIntersectionObserver()}catch(e){console.log("An error occurred. Error description: "+e.message)}}findDOMElements(){this.$animatedElements=[],document.querySelectorAll("[data-animated]").forEach(e=>this.$animatedElements.push(e)),this.$animatedElements.forEach(e=>{e.classList.add(`animation--${e.dataset.animation}--before`)})}initializeIntersectionObserver(){this.observer=new IntersectionObserver(this.observeIntersection.bind(this),{threshold:.2}),this.$animatedElements.forEach(e=>this.observer.observe(e))}observeIntersection(e){e.forEach(e=>{if(e.isIntersecting){const t=e.target;if(!t.dataset.animation)return;t.classList.add("animation"),t.dataset.delay?setTimeout(()=>{t.classList.add("animation--"+t.dataset.animation)},Number(t.dataset.delay)):t.classList.add("animation--"+t.dataset.animation)}})}};class o{constructor(e){this.popupController=e;try{this.findDOMElements(),this.subscribe()}catch(e){console.log("An error occurred. Error description: "+e.message)}}findDOMElements(){this.$form=document.querySelector(".first-section__form"),this.$nameInput=this.$form.querySelector('input[name="name"]'),this.$phoneInput=this.$form.querySelector('input[name="phone"]'),this.$emailInput=this.$form.querySelector('input[name="email"]')}async submitHandler(e){e.preventDefault();const t={title:"Заявка с главного экрана",name:this.$nameInput.value,phone:this.$phoneInput.value,email:this.$emailInput.value};(await fetch("https://лель-эко.рф/api/submit-form",{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}})).ok&&this.popupController.open("success")}subscribe(){this.$form.addEventListener("submit",this.submitHandler.bind(this))}}class i{constructor(e){this.popupController=e;try{this.findDOMElements(),this.subscribe()}catch(e){console.log("An error occurred. Error description: "+e.message)}}findDOMElements(){this.$form=document.querySelector(".sixth-section__form"),this.$nameInput=this.$form.querySelector('input[name="name"]'),this.$phoneInput=this.$form.querySelector('input[name="phone"]')}async submitHandler(e){e.preventDefault();const t={title:'Заявка с экрана "Закажите обратный звонок"',name:this.$nameInput.value,phone:this.$phoneInput.value,email:"Отсутствует"};(await fetch("https://лель-эко.рф/api/submit-form",{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}})).ok&&this.popupController.open("success")}subscribe(){this.$form.addEventListener("submit",this.submitHandler.bind(this))}}class a{constructor(){try{this.findDOMElements(),this.subscribe()}catch(e){console.log("An error occurred. Error description: "+e.message)}}findDOMElements(){this.$form=document.querySelector(".eighth-section__form"),this.$phoneInput=this.$form.querySelector('input[name="phone"]')}async submitHandler(e){e.preventDefault();const t={title:'Заявка с экрана "Нельзя загрязнять ОС отходами"',name:"Отсутствует",phone:this.$phoneInput.value,email:"Отсутствует"};(await fetch("http://localhost:5005/api/submit-form",{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}})).ok&&alert("OK")}subscribe(){this.$form.addEventListener("submit",this.submitHandler.bind(this))}}class c{constructor(e){this.popupController=e;try{this.findDOMElements(),this.subscribe()}catch(e){console.log("An error occurred. Error description: "+e.message)}}findDOMElements(){this.$form=document.querySelector(".popup__body__form"),this.$phoneInput=this.$form.querySelector('input[name="phone"]'),this.$nameInput=this.$form.querySelector('input[name="name"]')}async submitHandler(e){e.preventDefault();const t={title:'Заявка со всплывающего окна "Обратный звонок"',name:this.$nameInput.value,phone:this.$phoneInput.value,email:"Отсутствует"};(await fetch("https://лель-эко.рф/api/submit-form",{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}})).ok&&this.popupController.open("success")}subscribe(){this.$form.addEventListener("submit",this.submitHandler.bind(this))}}class l{constructor(){try{this.initialize()}catch(e){console.log("An error occurred. Error description: "+e.message)}}findDOMElements(){this.$forms=[],document.querySelectorAll(".popup").forEach(e=>this.$forms.push(e)),this.$popupButtons=[],document.querySelectorAll(".js--popup-button").forEach(e=>this.$popupButtons.push(e)),this.$closeButtons=[],this.$forms.forEach(e=>e.querySelectorAll(".popup__body__close-button").forEach(e=>this.$closeButtons.push(e)))}subscribe(){this.$popupButtons.forEach(e=>{e.addEventListener("click",this.openHandler.bind(this))}),this.$closeButtons.forEach(e=>{e.addEventListener("click",this.closeHandler.bind(this))})}initialize(){this.findDOMElements(),this.subscribe(),this.$forms.forEach(e=>{e.style.display="none"})}openHandler(e){e.preventDefault(),this.open(e.target.dataset.popup)}open(e){this.$forms.find(t=>t.id===e).style.display="flex"}closeHandler(e){e.target.classList.contains("popup__body__close-button")&&(this.$forms.find(t=>t.id===e.target.dataset.popup).style.display="none")}}var u=class{constructor(){try{this.subscribe()}catch(e){console.log("An error occurred. Error description: "+e.message)}}subscribe(){document.querySelectorAll(".js--scroll-to").forEach(e=>{const t=document.querySelector(e.dataset.element);e.addEventListener("click",e=>{e.preventDefault(),t.scrollIntoView({behavior:"smooth"})})})}};document.addEventListener("DOMContentLoaded",()=>{new n,new r;const e=new l;new o(e),new i(e),new a(e),new c(e),new u})}]);
//# sourceMappingURL=index.js.map